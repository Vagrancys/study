package com.vagrancy.study.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.vagrancy.study.model.knowledge.entity.Knowledge;
import com.vagrancy.study.model.knowledge.entity.KnowledgeAdvanced;
import com.vagrancy.study.model.knowledge.entity.KnowledgeClass;
import com.vagrancy.study.model.knowledge.entity.KnowledgeMileage;

import com.vagrancy.study.db.KnowledgeDao;
import com.vagrancy.study.db.KnowledgeAdvancedDao;
import com.vagrancy.study.db.KnowledgeClassDao;
import com.vagrancy.study.db.KnowledgeMileageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig knowledgeDaoConfig;
    private final DaoConfig knowledgeAdvancedDaoConfig;
    private final DaoConfig knowledgeClassDaoConfig;
    private final DaoConfig knowledgeMileageDaoConfig;

    private final KnowledgeDao knowledgeDao;
    private final KnowledgeAdvancedDao knowledgeAdvancedDao;
    private final KnowledgeClassDao knowledgeClassDao;
    private final KnowledgeMileageDao knowledgeMileageDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        knowledgeDaoConfig = daoConfigMap.get(KnowledgeDao.class).clone();
        knowledgeDaoConfig.initIdentityScope(type);

        knowledgeAdvancedDaoConfig = daoConfigMap.get(KnowledgeAdvancedDao.class).clone();
        knowledgeAdvancedDaoConfig.initIdentityScope(type);

        knowledgeClassDaoConfig = daoConfigMap.get(KnowledgeClassDao.class).clone();
        knowledgeClassDaoConfig.initIdentityScope(type);

        knowledgeMileageDaoConfig = daoConfigMap.get(KnowledgeMileageDao.class).clone();
        knowledgeMileageDaoConfig.initIdentityScope(type);

        knowledgeDao = new KnowledgeDao(knowledgeDaoConfig, this);
        knowledgeAdvancedDao = new KnowledgeAdvancedDao(knowledgeAdvancedDaoConfig, this);
        knowledgeClassDao = new KnowledgeClassDao(knowledgeClassDaoConfig, this);
        knowledgeMileageDao = new KnowledgeMileageDao(knowledgeMileageDaoConfig, this);

        registerDao(Knowledge.class, knowledgeDao);
        registerDao(KnowledgeAdvanced.class, knowledgeAdvancedDao);
        registerDao(KnowledgeClass.class, knowledgeClassDao);
        registerDao(KnowledgeMileage.class, knowledgeMileageDao);
    }
    
    public void clear() {
        knowledgeDaoConfig.clearIdentityScope();
        knowledgeAdvancedDaoConfig.clearIdentityScope();
        knowledgeClassDaoConfig.clearIdentityScope();
        knowledgeMileageDaoConfig.clearIdentityScope();
    }

    public KnowledgeDao getKnowledgeDao() {
        return knowledgeDao;
    }

    public KnowledgeAdvancedDao getKnowledgeAdvancedDao() {
        return knowledgeAdvancedDao;
    }

    public KnowledgeClassDao getKnowledgeClassDao() {
        return knowledgeClassDao;
    }

    public KnowledgeMileageDao getKnowledgeMileageDao() {
        return knowledgeMileageDao;
    }

}
